<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shu.db.dao.test.TestMapper" >
  <resultMap id="BaseResultMap" type="com.shu.db.model.test.Test" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="updateUser" property="updateuser" jdbcType="VARCHAR" />
    <result column="isDelete" property="isdelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, age, code, createTime, updateTime, updateUser, isDelete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from test
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from test
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.shu.db.model.test.Test" >
    insert into test (id, name, age, 
      code, createTime, updateTime, 
      updateUser, isDelete)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{code,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{updateuser,jdbcType=VARCHAR}, #{isdelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shu.db.model.test.Test" >
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="updateuser != null" >
        updateUser,
      </if>
      <if test="isdelete != null" >
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shu.db.model.test.Test" >
    update test
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        updateUser = #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shu.db.model.test.Test" >
    update test
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      updateUser = #{updateuser,jdbcType=VARCHAR},
      isDelete = #{isdelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectListByParam" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from test
    where 1 = 1
    <if test="pojo != null and pojo.id != null and pojo.id != ''">
      and name = #{pojo.id,jdbcType=VARCHAR}
    </if>
    <if test="pojo != null and pojo.name != null and pojo.name != ''">
      and name = #{pojo.name,jdbcType=VARCHAR}
    </if>
    <if test="pojo != null and pojo.age != null">
      and age = #{pojo.age,jdbcType=INTEGER}
    </if>
    <if test="pojo != null and pojo.code != null and pojo.code != ''">
      and name = #{pojo.code,jdbcType=VARCHAR}
    </if>
    <if test="pojo != null and pojo.isdelete != null">
      and isdelete = #{pojo.isDelete,jdbcType=INTEGER}
    </if>
    <if test="orderObj != null">
      order by
      <foreach collection="orderObj.orders" item="obj" separator=",">
        ${obj.orderName}  ${obj.orderSort}
      </foreach>
    </if>
    <if test="pager != null">
      limit ${pager.start}, ${pager.pageSize}
    </if>
  </select>

  <select id="selectCountByParam" resultType="int">
    select count(1)
    from test
    where 1 = 1
    <if test="pojo != null and pojo.name != null and pojo.name != ''">
      and name = #{pojo.name,jdbcType=VARCHAR}
    </if>
    <if test="pojo != null and pojo.age != null">
      and age = #{pojo.age,jdbcType=INTEGER}
    </if>
    <if test="pojo != null and pojo.isdelete != null">
      and isdelete = #{pojo.isDelete,jdbcType=INTEGER}
    </if>
  </select>
</mapper>