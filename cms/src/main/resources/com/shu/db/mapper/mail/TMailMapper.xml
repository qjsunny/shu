<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shu.db.dao.mail.TMailMapper" >
    <resultMap id="BaseResultMap" type="com.shu.db.model.mail.TMail" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="uidSend" property="uidsend" jdbcType="VARCHAR" />
        <result column="uidReceive" property="uidreceive" jdbcType="VARCHAR" />
        <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
        <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
        <result column="updateUser" property="updateuser" jdbcType="TIMESTAMP" />
        <result column="isDelete" property="isdelete" jdbcType="INTEGER" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.shu.db.model.mail.TMail" extends="BaseResultMap" >
        <result column="msg" property="msg" jdbcType="LONGVARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, uidSend, uidReceive, createTime, updateTime, updateUser, isDelete
    </sql>
    <sql id="Blob_Column_List" >
        msg
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from t_mail
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from t_mail
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.shu.db.model.mail.TMail" >
        insert into t_mail (id, uidSend, uidReceive,
        createTime, updateTime, updateUser,
        isDelete, msg)
        values (#{id,jdbcType=VARCHAR}, #{uidsend,jdbcType=VARCHAR}, #{uidreceive,jdbcType=VARCHAR},
        #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{updateuser,jdbcType=TIMESTAMP},
        #{isdelete,jdbcType=INTEGER}, #{msg,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.shu.db.model.mail.TMail" >
        insert into t_mail
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="uidsend != null" >
                uidSend,
            </if>
            <if test="uidreceive != null" >
                uidReceive,
            </if>
            <if test="createtime != null" >
                createTime,
            </if>
            <if test="updatetime != null" >
                updateTime,
            </if>
            <if test="updateuser != null" >
                updateUser,
            </if>
            <if test="isdelete != null" >
                isDelete,
            </if>
            <if test="msg != null" >
                msg,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="uidsend != null" >
                #{uidsend,jdbcType=VARCHAR},
            </if>
            <if test="uidreceive != null" >
                #{uidreceive,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null" >
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatetime != null" >
                #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateuser != null" >
                #{updateuser,jdbcType=TIMESTAMP},
            </if>
            <if test="isdelete != null" >
                #{isdelete,jdbcType=INTEGER},
            </if>
            <if test="msg != null" >
                #{msg,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.shu.db.model.mail.TMail" >
        update t_mail
        <set >
            <if test="uidsend != null" >
                uidSend = #{uidsend,jdbcType=VARCHAR},
            </if>
            <if test="uidreceive != null" >
                uidReceive = #{uidreceive,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null" >
                createTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatetime != null" >
                updateTime = #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateuser != null" >
                updateUser = #{updateuser,jdbcType=TIMESTAMP},
            </if>
            <if test="isdelete != null" >
                isDelete = #{isdelete,jdbcType=INTEGER},
            </if>
            <if test="msg != null" >
                msg = #{msg,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.shu.db.model.mail.TMail" >
        update t_mail
        set uidSend = #{uidsend,jdbcType=VARCHAR},
        uidReceive = #{uidreceive,jdbcType=VARCHAR},
        createTime = #{createtime,jdbcType=TIMESTAMP},
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
        updateUser = #{updateuser,jdbcType=TIMESTAMP},
        isDelete = #{isdelete,jdbcType=INTEGER},
        msg = #{msg,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.shu.db.model.mail.TMail" >
        update t_mail
        set uidSend = #{uidsend,jdbcType=VARCHAR},
        uidReceive = #{uidreceive,jdbcType=VARCHAR},
        createTime = #{createtime,jdbcType=TIMESTAMP},
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
        updateUser = #{updateuser,jdbcType=TIMESTAMP},
        isDelete = #{isdelete,jdbcType=INTEGER}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="selectListByParam" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from t_mail
        where 1 = 1
        <if test="pojo != null and pojo.id != null and pojo.id != ''">
            and id = #{pojo.id,jdbcType=VARCHAR}
        </if>
        <if test="pojo != null and pojo.uidsend != null and pojo.uidsend != ''">
            and uidSend = #{pojo.uidsend,jdbcType=VARCHAR}
        </if>
        <if test="pojo != null and pojo.uidreceive != null and pojo.uidreceive != ''">
            and uidReceive = #{pojo.uidreceive,jdbcType=VARCHAR}
        </if>
        <if test="pojo != null and pojo.isdelete != null">
            and isdelete = #{pojo.isDelete,jdbcType=INTEGER}
        </if>
        <if test="orderObj != null">
            order by
            <foreach collection="orderObj.orders" item="obj" separator=",">
                ${obj.orderName}  ${obj.orderSort}
            </foreach>
        </if>
        <if test="pager != null">
            limit ${pager.start}, ${pager.pageSize}
        </if>
    </select>

    <select id="selectCountByParam" resultType="int">
        select count(1)
        from t_mail
        where 1 = 1
        <if test="pojo != null and pojo.id != null and pojo.id != ''">
            and id = #{pojo.id,jdbcType=VARCHAR}
        </if>
        <if test="pojo != null and pojo.uidsend != null and pojo.uidsend != ''">
            and uidSend = #{pojo.uidsend,jdbcType=VARCHAR}
        </if>
        <if test="pojo != null and pojo.uidreceive != null and pojo.uidreceive != ''">
            and uidReceive = #{pojo.uidreceive,jdbcType=VARCHAR}
        </if>
        <if test="pojo != null and pojo.isdelete != null">
            and isdelete = #{pojo.isDelete,jdbcType=INTEGER}
        </if>
    </select>
</mapper>